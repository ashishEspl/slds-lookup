<!--     
*	Lookup component for lightning
* 
* @author       E. Jayaraman Iyer (https://github.com/jayaramaniyer150895)
* @version      2.0b
*
-->

<aura:component controller="LookupBarController">
	<!--Attributes to be used-->
	<aura:attribute name="valuelist" 
		type="sObject[]" 
		default="[]" 
		description="List contains list of all the records" />

	<aura:attribute name="propMap" 
		type="Map" 
		description="Map will hold the properties of object and field" />

	<aura:attribute name="fieldVal" 
		type="String" 
		default="null" 
		description="Attribute holds value of field entered" />

	<aura:attribute name="objectName" 
		type="String" 
		default="" 
		description="attribute holds value of object entered" />

	<aura:attribute name="close"
		type="Boolean" 
		default="false" 
		description="Attribute holds close icon variable" />

	<aura:attribute name="icon" 
		type="String" 
		default="" 
		description="Attribute holds value of icon name entered" />

	<aura:attribute name="label"
		type="String" 
		default="" 
		description="Holds the value of label entered" />

	<aura:attribute name="applyFilters"
		type="Boolean"
		default="false"
		description="True if user wants to apply lookup filters on the field" />
	
	<aura:attribute name="filter"
		type="String"
		default=""
		description="Holds value of lookup Filters" />

	<aura:attribute name="alert"
		type="String"
		default="false"
		description="True if any callout exception is caught"/>
		
	
	<!-- Event registration for LookupKey event -->
	<aura:registerEvent name="lookupEvent" type="c:LookupDataUpdateEvent"/>

	<!-- Method to be executed when the page loads -->
	<aura:handler name="init" value="{!this}" action="{!c.initialize}"/>

	<div>
		<!--Alert is shown when the object/field entered is invalid -->
		<aura:if isTrue="{!v.propMap.Valid == 'false' || v.alert == 'true'}">
			<aura:if isTrue="{!v.alert == 'true'}">
				<ui:message title="Error" severity="error" closable="false">
            		{!v.propMap.Filters}
  				</ui:message>
  				<aura:set attribute="else">
					<ui:message title="Error" severity="error" closable="false">
            			Invalid object/field
  					</ui:message>
  				</aura:set>
			</aura:if>

			<!-- If field and object is valid then the lookup field is shown -->
			<aura:set attribute="else">
				<div class="slds-form-element">
					<!-- If user enters a label as attribute then it is shown otherwise
					 as default the fieldName is shown -->
					<label class="slds-form-element__label" for="text-input-id-1">
						{!v.label || v.propMap.fieldLabel}
					</label>
					<div class="slds-form-element__control slds-input-has-icon slds-input-has-left">
						<c:svgIcon class="slds-icon slds-input__icon slds-input__icon_right" 
							xlinkHref="/resource/slds_214/standard/svg/symbols.svg#account" />
					</div>
					<div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right">
						<div>
							<ui:inputText aura:id="txtLookup" class="slds-input" required="{!v.propMap.Required}" 
								focus="{!c.fetchList}"  keyup="{!c.fetchList}" updateOn="keyup"/>
							<!-- Close icon -->
							<aura:if isTrue="{!v.close=='true'}">
								<a onclick="{!c.onClose}" href="#">
									<c:svgIcon class="slds-input__icon slds-icon-text-default"
										 xlinkHref="/resource/slds_214/utility-sprite/svg/symbols.svg#close" />
									<span class="slds-assistive-text">Close</span>
								</a>
								<aura:set attribute="else">
								<!-- Search icon -->
									<c:svgIcon class="slds-icon slds-input__icon slds-input__icon_right" 
										xlinkHref="/resource/slds_214/utility-sprite/svg/symbols.svg#search" />
								</aura:set>
							</aura:if>
						</div>
					</div>
				</div>
				<!-- The list is displayed only if the list returns contains items -->
				<aura:if isTrue="{!v.valuelist.length > 0}">
					<div class="slds-box" aura:id="card">
						<aura:iteration aura:id="iteration" items="{!v.valuelist}" var="obj">
							<div class="recordCard"
								onclick="{!c.setValuesToField}"
								data-value="{!obj.Name}"
								data-id="{!obj.Id}">
								<!-- Card icons -->
								<lightning:icon iconName="{!v.icon}" />
								<!-- Card items -->
								<p class="recordValue">{!obj.Name}</p>
							</div>
						</aura:iteration>
					</div>
				</aura:if>
			</aura:set>
		</aura:if>
	</div>
</aura:component>